unit uImpressao;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.ExtCtrls, Vcl.StdCtrls,
  FireDAC.Stan.Intf, FireDAC.Stan.Option, FireDAC.Stan.Param,
  FireDAC.Stan.Error, FireDAC.DatS, FireDAC.Phys.Intf, FireDAC.DApt.Intf,
  FireDAC.Stan.Async, FireDAC.DApt, Data.DB, FireDAC.Comp.DataSet,
  FireDAC.Comp.Client, frxSmartMemo, frCoreClasses, frxClass, frxDBSet;

type
  TfrmImpressao = class(TForm)
    pnlFundo: TPanel;
    pnlButton: TPanel;
    RadioGroup1: TRadioGroup;
    SaveDialog1: TSaveDialog;
    cbxStatus: TComboBox;
    cxbOrdenacao: TComboBox;
    Label1: TLabel;
    Label2: TLabel;
    btnImprimir: TPanel;
    btnSair: TPanel;
    qUsuariosImpressao: TFDQuery;
    rel_usuarios: TfrxReport;
    rel_ds_usuarios: TfrxDBDataset;
    procedure btnSairClick(Sender: TObject);
    procedure FormShow(Sender: TObject);
    procedure btnImprimirClick(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  frmImpressao: TfrmImpressao;

implementation

{$R *.dfm}

uses uDM, uErro;

procedure TfrmImpressao.btnImprimirClick(Sender: TObject);
Var
  vSQLAtivo, vSQLInativo : String;
  erro : TfrmErro;
begin
Try
  if cbxStatus.ItemIndex = 0 then
    begin
      qUsuariosImpressao.Close;
      qUsuariosImpressao.SQL.Clear;
      qUsuariosImpressao.SQL.Add('SELECT t.USERNAME, t.NOME, t.EMAIL, CASE WHEN (t.ATIVO = 1) THEN ''Ativo'' ELSE ''Inativo'' END AS ATIVO, t.ULTLOGIN '+
                                  '  FROM TBUSUARIO t ORDER BY '+cxbOrdenacao.Text);
      qUsuariosImpressao.Open;
      rel_usuarios.ShowReport();
    end else
          if cbxStatus.ItemIndex = 1 then
            begin
              qUsuariosImpressao.Close;
              qUsuariosImpressao.SQL.Clear;
              qUsuariosImpressao.SQL.Add('SELECT t.USERNAME, t.NOME, t.EMAIL, CASE WHEN (t.ATIVO = 1) THEN ''Ativo'' ELSE ''Inativo'' END AS ATIVO, t.ULTLOGIN '+
                                          '  FROM TBUSUARIO t WHERE ATIVO = 1 ORDER BY '+cxbOrdenacao.Text);
              qUsuariosImpressao.Open;
              rel_usuarios.ShowReport();
            end else
              begin
                qUsuariosImpressao.Close;
                qUsuariosImpressao.SQL.Clear;
                qUsuariosImpressao.SQL.Add('SELECT t.USERNAME, t.NOME, t.EMAIL, CASE WHEN (t.ATIVO = 1) THEN ''Ativo'' ELSE ''Inativo'' END AS ATIVO, t.ULTLOGIN '+
                                           '  FROM TBUSUARIO t WHERE ATIVO = 0 ORDER BY '+cxbOrdenacao.Text);
                qUsuariosImpressao.Open;
                rel_usuarios.ShowReport();
              end;

    except  on E: Exception do
      begin
        erro := TfrmErro.Create(Self);
        erro.Memo1.Lines.Text := 'Erro ao imprimir os dados de Usuário: '+E.Message;
        erro.ShowModal;
    end;
 end;



end;

procedure TfrmImpressao.btnSairClick(Sender: TObject);
begin
Close;
frmImpressao := nil;
end;

procedure TfrmImpressao.FormShow(Sender: TObject);
Var
  I : Integer;
begin

  if qUsuariosImpressao.Active = False then
    qUsuariosImpressao.Active := True;

  for I := 0 to qUsuariosImpressao.FieldCount -1 do
  cxbOrdenacao.Items.Add(qUsuariosImpressao.Fields[i].DisplayName);

  cxbOrdenacao.ItemIndex := 0;
end;

end.
